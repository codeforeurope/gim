/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class layerObj : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;
  protected object swigParentRef;
  
  protected static object ThisOwn_true() { return null; }
  protected object ThisOwn_false() { return this; }

  internal layerObj(IntPtr cPtr, bool cMemoryOwn, object parent) {
    swigCMemOwn = cMemoryOwn;
    swigParentRef = parent;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(layerObj obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }
  internal static HandleRef getCPtrAndDisown(layerObj obj, object parent) {
    if (obj != null)
    {
      obj.swigCMemOwn = false;
      obj.swigParentRef = parent;
      return obj.swigCPtr;
    }
    else
    {
      return new HandleRef(null, IntPtr.Zero);
    }
  }
  internal static HandleRef getCPtrAndSetReference(layerObj obj, object parent) {
    if (obj != null)
    {
      obj.swigParentRef = parent;
      return obj.swigCPtr;
    }
    else
    {
      return new HandleRef(null, IntPtr.Zero);
    }
  }

  ~layerObj() {
    Dispose();
  }

  public virtual void Dispose() {
  lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        mapscriptPINVOKE.delete_layerObj(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      swigParentRef = null;
      GC.SuppressFinalize(this);
    }
  }

  public override bool Equals(object obj) {
    if (obj == null)
        return false;
    if (this.GetType() != obj.GetType())
        return false;
    return swigCPtr.Handle.Equals(layerObj.getCPtr((layerObj)obj).Handle);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public string classitem {
    set {
      mapscriptPINVOKE.layerObj_classitem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_classitem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int refcount {
    get {
      int ret = mapscriptPINVOKE.layerObj_refcount_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int numclasses {
    get {
      int ret = mapscriptPINVOKE.layerObj_numclasses_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int maxclasses {
    get {
      int ret = mapscriptPINVOKE.layerObj_maxclasses_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int index {
    get {
      int ret = mapscriptPINVOKE.layerObj_index_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public mapObj map {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_map_get(swigCPtr);
      mapObj ret = (cPtr == IntPtr.Zero) ? null : new mapObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string header {
    set {
      mapscriptPINVOKE.layerObj_header_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_header_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string footer {
    set {
      mapscriptPINVOKE.layerObj_footer_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_footer_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string template {
    set {
      mapscriptPINVOKE.layerObj_template_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_template_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string name {
    set {
      mapscriptPINVOKE.layerObj_name_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_name_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string group {
    set {
      mapscriptPINVOKE.layerObj_group_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_group_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int status {
    set {
      mapscriptPINVOKE.layerObj_status_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_status_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string data {
    set {
      mapscriptPINVOKE.layerObj_data_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_data_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public MS_LAYER_TYPE type {
    set {
      mapscriptPINVOKE.layerObj_type_set(swigCPtr, (int)value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      MS_LAYER_TYPE ret = (MS_LAYER_TYPE)mapscriptPINVOKE.layerObj_type_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double tolerance {
    set {
      mapscriptPINVOKE.layerObj_tolerance_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_tolerance_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int toleranceunits {
    set {
      mapscriptPINVOKE.layerObj_toleranceunits_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_toleranceunits_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double symbolscaledenom {
    set {
      mapscriptPINVOKE.layerObj_symbolscaledenom_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_symbolscaledenom_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double minscaledenom {
    set {
      mapscriptPINVOKE.layerObj_minscaledenom_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_minscaledenom_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double maxscaledenom {
    set {
      mapscriptPINVOKE.layerObj_maxscaledenom_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_maxscaledenom_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int minfeaturesize {
    set {
      mapscriptPINVOKE.layerObj_minfeaturesize_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_minfeaturesize_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double labelminscaledenom {
    set {
      mapscriptPINVOKE.layerObj_labelminscaledenom_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_labelminscaledenom_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double labelmaxscaledenom {
    set {
      mapscriptPINVOKE.layerObj_labelmaxscaledenom_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_labelmaxscaledenom_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double mingeowidth {
    set {
      mapscriptPINVOKE.layerObj_mingeowidth_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_mingeowidth_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double maxgeowidth {
    set {
      mapscriptPINVOKE.layerObj_maxgeowidth_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = mapscriptPINVOKE.layerObj_maxgeowidth_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int sizeunits {
    set {
      mapscriptPINVOKE.layerObj_sizeunits_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_sizeunits_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int maxfeatures {
    set {
      mapscriptPINVOKE.layerObj_maxfeatures_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_maxfeatures_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int startindex {
    set {
      mapscriptPINVOKE.layerObj_startindex_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_startindex_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public colorObj offsite {
    set {
      mapscriptPINVOKE.layerObj_offsite_set(swigCPtr, colorObj.getCPtr(value));
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_offsite_get(swigCPtr);
      colorObj ret = (cPtr == IntPtr.Zero) ? null : new colorObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int transform {
    set {
      mapscriptPINVOKE.layerObj_transform_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_transform_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int labelcache {
    set {
      mapscriptPINVOKE.layerObj_labelcache_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_labelcache_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int postlabelcache {
    set {
      mapscriptPINVOKE.layerObj_postlabelcache_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_postlabelcache_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string labelitem {
    set {
      mapscriptPINVOKE.layerObj_labelitem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_labelitem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string tileitem {
    set {
      mapscriptPINVOKE.layerObj_tileitem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_tileitem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string tileindex {
    set {
      mapscriptPINVOKE.layerObj_tileindex_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_tileindex_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int units {
    set {
      mapscriptPINVOKE.layerObj_units_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_units_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string connection {
    set {
      mapscriptPINVOKE.layerObj_connection_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_connection_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string plugin_library {
    set {
      mapscriptPINVOKE.layerObj_plugin_library_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_plugin_library_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string plugin_library_original {
    set {
      mapscriptPINVOKE.layerObj_plugin_library_original_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_plugin_library_original_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public MS_CONNECTION_TYPE connectiontype {
    set {
      mapscriptPINVOKE.layerObj_connectiontype_set(swigCPtr, (int)value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      MS_CONNECTION_TYPE ret = (MS_CONNECTION_TYPE)mapscriptPINVOKE.layerObj_connectiontype_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int numitems {
    get {
      int ret = mapscriptPINVOKE.layerObj_numitems_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string bandsitem {
    set {
      mapscriptPINVOKE.layerObj_bandsitem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_bandsitem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string filteritem {
    set {
      mapscriptPINVOKE.layerObj_filteritem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_filteritem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string styleitem {
    set {
      mapscriptPINVOKE.layerObj_styleitem_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_styleitem_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string requires {
    set {
      mapscriptPINVOKE.layerObj_requires_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_requires_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string labelrequires {
    set {
      mapscriptPINVOKE.layerObj_labelrequires_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_labelrequires_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public hashTableObj metadata {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_metadata_get(swigCPtr);
      hashTableObj ret = (cPtr == IntPtr.Zero) ? null : new hashTableObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public hashTableObj validation {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_validation_get(swigCPtr);
      hashTableObj ret = (cPtr == IntPtr.Zero) ? null : new hashTableObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public hashTableObj bindvals {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_bindvals_get(swigCPtr);
      hashTableObj ret = (cPtr == IntPtr.Zero) ? null : new hashTableObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public clusterObj cluster {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_cluster_get(swigCPtr);
      clusterObj ret = (cPtr == IntPtr.Zero) ? null : new clusterObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int opacity {
    set {
      mapscriptPINVOKE.layerObj_opacity_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_opacity_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int dump {
    set {
      mapscriptPINVOKE.layerObj_dump_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_dump_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int debug {
    set {
      mapscriptPINVOKE.layerObj_debug_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = mapscriptPINVOKE.layerObj_debug_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public rectObj extent {
    get {
      IntPtr cPtr = mapscriptPINVOKE.layerObj_extent_get(swigCPtr);
      rectObj ret = (cPtr == IntPtr.Zero) ? null : new rectObj(cPtr, false, ThisOwn_false());
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int numprocessing {
    get {
      int ret = mapscriptPINVOKE.layerObj_numprocessing_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int numjoins {
    get {
      int ret = mapscriptPINVOKE.layerObj_numjoins_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string classgroup {
    set {
      mapscriptPINVOKE.layerObj_classgroup_set(swigCPtr, value);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = mapscriptPINVOKE.layerObj_classgroup_get(swigCPtr);
      if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public layerObj(mapObj map) : this(mapscriptPINVOKE.new_layerObj(mapObj.getCPtr(map)), true, map) {
  
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
}

  public layerObj clone() {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_clone(swigCPtr);
    layerObj ret = (cPtr == IntPtr.Zero) ? null : new layerObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int updateFromString(string snippet) {
    int ret = mapscriptPINVOKE.layerObj_updateFromString(swigCPtr, snippet);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int insertClass(classObj classobj, int index) {
    int ret = mapscriptPINVOKE.layerObj_insertClass(swigCPtr, classObj.getCPtrAndSetReference(classobj, ThisOwn_false()), index);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public classObj removeClass(int index) {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_removeClass(swigCPtr, index);
    classObj ret = (cPtr == IntPtr.Zero) ? null : new classObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int open() {
    int ret = mapscriptPINVOKE.layerObj_open(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int whichShapes(rectObj rect) {
    int ret = mapscriptPINVOKE.layerObj_whichShapes(swigCPtr, rectObj.getCPtr(rect));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public shapeObj nextShape() {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_nextShape(swigCPtr);
    shapeObj ret = (cPtr == IntPtr.Zero) ? null : new shapeObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void close() {
    mapscriptPINVOKE.layerObj_close(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
  }

  public shapeObj getShape(resultObj record) {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getShape(swigCPtr, resultObj.getCPtr(record));
    shapeObj ret = (cPtr == IntPtr.Zero) ? null : new shapeObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getNumResults() {
    int ret = mapscriptPINVOKE.layerObj_getNumResults(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public rectObj getResultsBounds() {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getResultsBounds(swigCPtr);
    rectObj ret = (cPtr == IntPtr.Zero) ? null : new rectObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public resultObj getResult(int i) {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getResult(swigCPtr, i);
    resultObj ret = (cPtr == IntPtr.Zero) ? null : new resultObj(cPtr, false, ThisOwn_false());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public classObj getClass(int i) {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getClass(swigCPtr, i);
    classObj ret = (cPtr == IntPtr.Zero) ? null : new classObj(cPtr, true, ThisOwn_false());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getItem(int i) {
    string ret = mapscriptPINVOKE.layerObj_getItem(swigCPtr, i);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int draw(mapObj map, imageObj image) {
    int ret = mapscriptPINVOKE.layerObj_draw(swigCPtr, mapObj.getCPtr(map), imageObj.getCPtr(image));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int drawQuery(mapObj map, imageObj image) {
    int ret = mapscriptPINVOKE.layerObj_drawQuery(swigCPtr, mapObj.getCPtr(map), imageObj.getCPtr(image));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByFilter(mapObj map, string arg1) {
    int ret = mapscriptPINVOKE.layerObj_queryByFilter(swigCPtr, mapObj.getCPtr(map), arg1);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByAttributes(mapObj map, string qitem, string qstring, int mode) {
    int ret = mapscriptPINVOKE.layerObj_queryByAttributes(swigCPtr, mapObj.getCPtr(map), qitem, qstring, mode);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByPoint(mapObj map, pointObj point, int mode, double buffer) {
    int ret = mapscriptPINVOKE.layerObj_queryByPoint(swigCPtr, mapObj.getCPtr(map), pointObj.getCPtr(point), mode, buffer);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByRect(mapObj map, rectObj rect) {
    int ret = mapscriptPINVOKE.layerObj_queryByRect(swigCPtr, mapObj.getCPtr(map), rectObj.getCPtr(rect));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByFeatures(mapObj map, int slayer) {
    int ret = mapscriptPINVOKE.layerObj_queryByFeatures(swigCPtr, mapObj.getCPtr(map), slayer);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByShape(mapObj map, shapeObj shape) {
    int ret = mapscriptPINVOKE.layerObj_queryByShape(swigCPtr, mapObj.getCPtr(map), shapeObj.getCPtr(shape));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int queryByIndex(mapObj map, int tileindex, int shapeindex, int bAddToQuery) {
    int ret = mapscriptPINVOKE.layerObj_queryByIndex(swigCPtr, mapObj.getCPtr(map), tileindex, shapeindex, bAddToQuery);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public resultCacheObj getResults() {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getResults(swigCPtr);
    resultCacheObj ret = (cPtr == IntPtr.Zero) ? null : new resultCacheObj(cPtr, false, ThisOwn_false());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setFilter(string filter) {
    int ret = mapscriptPINVOKE.layerObj_setFilter(swigCPtr, filter);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getFilterString() {
    string ret = mapscriptPINVOKE.layerObj_getFilterString(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setWKTProjection(string wkt) {
    int ret = mapscriptPINVOKE.layerObj_setWKTProjection(swigCPtr, wkt);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getProjection() {
    string ret = mapscriptPINVOKE.layerObj_getProjection(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setProjection(string proj4) {
    int ret = mapscriptPINVOKE.layerObj_setProjection(swigCPtr, proj4);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addFeature(shapeObj shape) {
    int ret = mapscriptPINVOKE.layerObj_addFeature(swigCPtr, shapeObj.getCPtr(shape));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getNumFeatures() {
    int ret = mapscriptPINVOKE.layerObj_getNumFeatures(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public rectObj getExtent() {
    IntPtr cPtr = mapscriptPINVOKE.layerObj_getExtent(swigCPtr);
    rectObj ret = (cPtr == IntPtr.Zero) ? null : new rectObj(cPtr, true, ThisOwn_true());
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setExtent(double minx, double miny, double maxx, double maxy) {
    int ret = mapscriptPINVOKE.layerObj_setExtent(swigCPtr, minx, miny, maxx, maxy);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getMetaData(string name) {
    string ret = mapscriptPINVOKE.layerObj_getMetaData(swigCPtr, name);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setMetaData(string name, string value) {
    int ret = mapscriptPINVOKE.layerObj_setMetaData(swigCPtr, name, value);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int removeMetaData(string name) {
    int ret = mapscriptPINVOKE.layerObj_removeMetaData(swigCPtr, name);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getFirstMetaDataKey() {
    string ret = mapscriptPINVOKE.layerObj_getFirstMetaDataKey(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getNextMetaDataKey(string lastkey) {
    string ret = mapscriptPINVOKE.layerObj_getNextMetaDataKey(swigCPtr, lastkey);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getWMSFeatureInfoURL(mapObj map, int click_x, int click_y, int feature_count, string info_format) {
    string ret = mapscriptPINVOKE.layerObj_getWMSFeatureInfoURL(swigCPtr, mapObj.getCPtr(map), click_x, click_y, feature_count, info_format);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string executeWFSGetFeature(layerObj layer) {
    string ret = mapscriptPINVOKE.layerObj_executeWFSGetFeature(swigCPtr, layerObj.getCPtr(layer));
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int applySLD(string sld, string stylelayer) {
    int ret = mapscriptPINVOKE.layerObj_applySLD(swigCPtr, sld, stylelayer);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int applySLDURL(string sld, string stylelayer) {
    int ret = mapscriptPINVOKE.layerObj_applySLDURL(swigCPtr, sld, stylelayer);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string generateSLD() {
    string ret = mapscriptPINVOKE.layerObj_generateSLD(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int isVisible() {
    int ret = mapscriptPINVOKE.layerObj_isVisible(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int moveClassUp(int index) {
    int ret = mapscriptPINVOKE.layerObj_moveClassUp(swigCPtr, index);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int moveClassDown(int index) {
    int ret = mapscriptPINVOKE.layerObj_moveClassDown(swigCPtr, index);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setProcessingKey(string key, string value) {
    mapscriptPINVOKE.layerObj_setProcessingKey(swigCPtr, key, value);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setProcessing(string directive) {
    mapscriptPINVOKE.layerObj_setProcessing(swigCPtr, directive);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addProcessing(string directive) {
    mapscriptPINVOKE.layerObj_addProcessing(swigCPtr, directive);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getProcessing(int index) {
    string ret = mapscriptPINVOKE.layerObj_getProcessing(swigCPtr, index);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getProcessingKey(string key) {
    string ret = mapscriptPINVOKE.layerObj_getProcessingKey(swigCPtr, key);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int clearProcessing() {
    int ret = mapscriptPINVOKE.layerObj_clearProcessing(swigCPtr);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int setConnectionType(int connectiontype, string library_str) {
    int ret = mapscriptPINVOKE.layerObj_setConnectionType(swigCPtr, connectiontype, library_str);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getClassIndex(mapObj map, shapeObj shape, SWIGTYPE_p_int classgroup, int numclasses) {
    int ret = mapscriptPINVOKE.layerObj_getClassIndex(swigCPtr, mapObj.getCPtr(map), shapeObj.getCPtr(shape), SWIGTYPE_p_int.getCPtr(classgroup), numclasses);
    if (mapscriptPINVOKE.SWIGPendingException.Pending) throw mapscriptPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
